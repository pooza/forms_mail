#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/mailparser/rfc2183/parser.y".
#

require 'racc/parser'


module MailParser

  module RFC2183

    class Parser < Racc::Parser

module_eval <<'..end lib/mailparser/rfc2183/parser.y modeval..id5c1f7a7c89', 'lib/mailparser/rfc2183/parser.y', 42

require "mailparser/rfc2183/scanner"

def parse(header_type, value)
  @header_type = header_type
  @value = value
  @scanner = Scanner.new(header_type, value)
  ret = yyparse(self, :parse_sub)
  class << ret
    attr_accessor :comments
  end
  ret.comments = @scanner.comments
  ret
end

def parse_sub(&block)
  yield @header_type, nil
  @scanner.scan(&block)
end

def on_error(t, val, vstack)
#  p t, val, vstack
#  p racc_token2str(t)
  raise MailParser::ParseError, val+@scanner.rest
end
..end lib/mailparser/rfc2183/parser.y modeval..id5c1f7a7c89

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 2, 8, :_reduce_1,
 2, 9, :_reduce_2,
 1, 10, :_reduce_none,
 0, 11, :_reduce_4,
 3, 11, :_reduce_5,
 3, 12, :_reduce_6,
 1, 13, :_reduce_none,
 1, 14, :_reduce_none,
 1, 14, :_reduce_none ]

racc_reduce_n = 10

racc_shift_n = 17

racc_action_table = [
    14,     9,     6,    16,     8,     3,    12,    13,     1 ]

racc_action_check = [
    13,     7,     2,    13,     6,     1,     9,    11,     0 ]

racc_action_pointer = [
     6,     2,     2,   nil,   nil,   nil,     4,    -3,   nil,     3,
   nil,     2,   nil,    -3,   nil,   nil,   nil ]

racc_action_default = [
   -10,   -10,   -10,    -3,    -1,    -4,   -10,    -2,    17,   -10,
    -5,   -10,    -7,   -10,    -8,    -6,    -9 ]

racc_goto_table = [
     2,     4,     5,     7,    10,    11,    15 ]

racc_goto_check = [
     1,     2,     3,     4,     5,     6,     7 ]

racc_goto_pointer = [
   nil,     0,     0,     1,    -2,    -5,    -4,    -7 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :CONTENT_DISPOSITION => 2,
 :TOKEN => 3,
 ";" => 4,
 "=" => 5,
 :QUOTED_STRING => 6 }

racc_use_result_var = false

racc_nt_base = 7

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'CONTENT_DISPOSITION',
'TOKEN',
'";"',
'"="',
'QUOTED_STRING',
'$start',
'all',
'content_disposition',
'type',
'parameter_list',
'parameter',
'attribute',
'value']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'lib/mailparser/rfc2183/parser.y', 9
  def _reduce_1( val, _values)
val[1]
  end
.,.,

module_eval <<'.,.,', 'lib/mailparser/rfc2183/parser.y', 15
  def _reduce_2( val, _values)
                    ContentDisposition.new(val[0], val[1])
  end
.,.,

 # reduce 3 omitted

module_eval <<'.,.,', 'lib/mailparser/rfc2183/parser.y', 22
  def _reduce_4( val, _values)
                    {}
  end
.,.,

module_eval <<'.,.,', 'lib/mailparser/rfc2183/parser.y', 29
  def _reduce_5( val, _values)
                    pn, pv = val[2]
                    pv = $1 if pv =~ /\A\"(.*)\"\Z/m
                    val[0][pn] = pv.gsub(/\s*\n\s*/, " ")
                    val[0]
  end
.,.,

module_eval <<'.,.,', 'lib/mailparser/rfc2183/parser.y', 34
  def _reduce_6( val, _values)
                    [val[0].downcase, val[2]]
  end
.,.,

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 def _reduce_none( val, _values)
  val[0]
 end

    end   # class Parser

  end   # module RFC2183

end   # module MailParser
